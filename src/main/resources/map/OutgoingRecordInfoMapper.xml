<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.dao.OutgoingRecordInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfo" >
    <id column="pk_oriid" property="pkOriid" jdbcType="BIGINT" />
    <result column="pk_orid" property="pkOrid" jdbcType="BIGINT" />
    <result column="pk_pid" property="pkPid" jdbcType="BIGINT" />
    <result column="outgoing_record_num" property="outgoingRecordNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pk_oriid, pk_orid, pk_pid, outgoing_record_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xt_outgoing_record_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from xt_outgoing_record_info
    where pk_oriid = #{pkOriid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from xt_outgoing_record_info
    where pk_oriid = #{pkOriid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfoExample" >
    delete from xt_outgoing_record_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfo" >
    insert into xt_outgoing_record_info (pk_oriid, pk_orid, pk_pid, 
      outgoing_record_num)
    values (#{pkOriid,jdbcType=BIGINT}, #{pkOrid,jdbcType=BIGINT}, #{pkPid,jdbcType=BIGINT}, 
      #{outgoingRecordNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfo" >
    insert into xt_outgoing_record_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkOriid != null" >
        pk_oriid,
      </if>
      <if test="pkOrid != null" >
        pk_orid,
      </if>
      <if test="pkPid != null" >
        pk_pid,
      </if>
      <if test="outgoingRecordNum != null" >
        outgoing_record_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkOriid != null" >
        #{pkOriid,jdbcType=BIGINT},
      </if>
      <if test="pkOrid != null" >
        #{pkOrid,jdbcType=BIGINT},
      </if>
      <if test="pkPid != null" >
        #{pkPid,jdbcType=BIGINT},
      </if>
      <if test="outgoingRecordNum != null" >
        #{outgoingRecordNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfoExample" resultType="java.lang.Integer" >
    select count(*) from xt_outgoing_record_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xt_outgoing_record_info
    <set >
      <if test="record.pkOriid != null" >
        pk_oriid = #{record.pkOriid,jdbcType=BIGINT},
      </if>
      <if test="record.pkOrid != null" >
        pk_orid = #{record.pkOrid,jdbcType=BIGINT},
      </if>
      <if test="record.pkPid != null" >
        pk_pid = #{record.pkPid,jdbcType=BIGINT},
      </if>
      <if test="record.outgoingRecordNum != null" >
        outgoing_record_num = #{record.outgoingRecordNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xt_outgoing_record_info
    set pk_oriid = #{record.pkOriid,jdbcType=BIGINT},
      pk_orid = #{record.pkOrid,jdbcType=BIGINT},
      pk_pid = #{record.pkPid,jdbcType=BIGINT},
      outgoing_record_num = #{record.outgoingRecordNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfo" >
    update xt_outgoing_record_info
    <set >
      <if test="pkOrid != null" >
        pk_orid = #{pkOrid,jdbcType=BIGINT},
      </if>
      <if test="pkPid != null" >
        pk_pid = #{pkPid,jdbcType=BIGINT},
      </if>
      <if test="outgoingRecordNum != null" >
        outgoing_record_num = #{outgoingRecordNum,jdbcType=INTEGER},
      </if>
    </set>
    where pk_oriid = #{pkOriid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.OutgoingRecordInfo" >
    update xt_outgoing_record_info
    set pk_orid = #{pkOrid,jdbcType=BIGINT},
      pk_pid = #{pkPid,jdbcType=BIGINT},
      outgoing_record_num = #{outgoingRecordNum,jdbcType=INTEGER}
    where pk_oriid = #{pkOriid,jdbcType=BIGINT}
  </update>
</mapper>