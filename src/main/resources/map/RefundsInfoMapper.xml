<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.dao.RefundsInfoMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfo" >
    <id column="pk_reiid" property="pkReiid" jdbcType="BIGINT" />
    <result column="pk_reid" property="pkReid" jdbcType="BIGINT" />
    <result column="pk_pid" property="pkPid" jdbcType="BIGINT" />
    <result column="refunds_info_num" property="refundsInfoNum" jdbcType="INTEGER" />
    <result column="refunds_info_price" property="refundsInfoPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pk_reiid, pk_reid, pk_pid, refunds_info_num, refunds_info_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xt_refunds_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from xt_refunds_info
    where pk_reiid = #{pkReiid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from xt_refunds_info
    where pk_reiid = #{pkReiid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfoExample" >
    delete from xt_refunds_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfo" >
    insert into xt_refunds_info (pk_reiid, pk_reid, pk_pid, 
      refunds_info_num, refunds_info_price)
    values (#{pkReiid,jdbcType=BIGINT}, #{pkReid,jdbcType=BIGINT}, #{pkPid,jdbcType=BIGINT}, 
      #{refundsInfoNum,jdbcType=INTEGER}, #{refundsInfoPrice,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfo" >
    insert into xt_refunds_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkReiid != null" >
        pk_reiid,
      </if>
      <if test="pkReid != null" >
        pk_reid,
      </if>
      <if test="pkPid != null" >
        pk_pid,
      </if>
      <if test="refundsInfoNum != null" >
        refunds_info_num,
      </if>
      <if test="refundsInfoPrice != null" >
        refunds_info_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkReiid != null" >
        #{pkReiid,jdbcType=BIGINT},
      </if>
      <if test="pkReid != null" >
        #{pkReid,jdbcType=BIGINT},
      </if>
      <if test="pkPid != null" >
        #{pkPid,jdbcType=BIGINT},
      </if>
      <if test="refundsInfoNum != null" >
        #{refundsInfoNum,jdbcType=INTEGER},
      </if>
      <if test="refundsInfoPrice != null" >
        #{refundsInfoPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfoExample" resultType="java.lang.Integer" >
    select count(*) from xt_refunds_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xt_refunds_info
    <set >
      <if test="record.pkReiid != null" >
        pk_reiid = #{record.pkReiid,jdbcType=BIGINT},
      </if>
      <if test="record.pkReid != null" >
        pk_reid = #{record.pkReid,jdbcType=BIGINT},
      </if>
      <if test="record.pkPid != null" >
        pk_pid = #{record.pkPid,jdbcType=BIGINT},
      </if>
      <if test="record.refundsInfoNum != null" >
        refunds_info_num = #{record.refundsInfoNum,jdbcType=INTEGER},
      </if>
      <if test="record.refundsInfoPrice != null" >
        refunds_info_price = #{record.refundsInfoPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xt_refunds_info
    set pk_reiid = #{record.pkReiid,jdbcType=BIGINT},
      pk_reid = #{record.pkReid,jdbcType=BIGINT},
      pk_pid = #{record.pkPid,jdbcType=BIGINT},
      refunds_info_num = #{record.refundsInfoNum,jdbcType=INTEGER},
      refunds_info_price = #{record.refundsInfoPrice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfo" >
    update xt_refunds_info
    <set >
      <if test="pkReid != null" >
        pk_reid = #{pkReid,jdbcType=BIGINT},
      </if>
      <if test="pkPid != null" >
        pk_pid = #{pkPid,jdbcType=BIGINT},
      </if>
      <if test="refundsInfoNum != null" >
        refunds_info_num = #{refundsInfoNum,jdbcType=INTEGER},
      </if>
      <if test="refundsInfoPrice != null" >
        refunds_info_price = #{refundsInfoPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where pk_reiid = #{pkReiid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.ccit.JavaEEsx.zh04.sxcsglxt.model.RefundsInfo" >
    update xt_refunds_info
    set pk_reid = #{pkReid,jdbcType=BIGINT},
      pk_pid = #{pkPid,jdbcType=BIGINT},
      refunds_info_num = #{refundsInfoNum,jdbcType=INTEGER},
      refunds_info_price = #{refundsInfoPrice,jdbcType=DECIMAL}
    where pk_reiid = #{pkReiid,jdbcType=BIGINT}
  </update>
</mapper>